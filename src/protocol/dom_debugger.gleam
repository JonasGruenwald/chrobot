//// > ⚙️  This module was generated from the Chrome DevTools Protocol version **1.3**
//// ## DOMDebugger Domain  
////
//// DOM debugging allows setting breakpoints on particular DOM operations and events. JavaScript
//// execution will stop on these operations as if there was a regular breakpoint set.  
////
//// [📖   View this domain on the DevTools Protocol API Docs](https://chromedevtools.github.io/devtools-protocol/1-3/DOMDebugger/)

// ---------------------------------------------------------------------------
// |  !!!!!!   This is an autogenerated file - Do not edit manually  !!!!!!  |
// | Run ` gleam run -m scripts/generate_protocol_bindings.sh` to regenerate.|  
// ---------------------------------------------------------------------------

import gleam/json
import gleam/option
import protocol/dom
import protocol/runtime

/// DOM breakpoint type.
pub type DOMBreakpointType {
  DOMBreakpointTypeSubtreeModified
  DOMBreakpointTypeAttributeModified
  DOMBreakpointTypeNodeRemoved
}

@internal
pub fn encode__dom_breakpoint_type(value: DOMBreakpointType) {
  case value {
    DOMBreakpointTypeSubtreeModified -> "subtree-modified"
    DOMBreakpointTypeAttributeModified -> "attribute-modified"
    DOMBreakpointTypeNodeRemoved -> "node-removed"
  }
  |> json.string()
}

/// Object event listener.
pub type EventListener {
  EventListener(
    type_: String,
    use_capture: Bool,
    passive: Bool,
    once: Bool,
    script_id: runtime.ScriptId,
    line_number: Int,
    column_number: Int,
    handler: option.Option(runtime.RemoteObject),
    original_handler: option.Option(runtime.RemoteObject),
    backend_node_id: option.Option(dom.BackendNodeId),
  )
}
// TODO: implement type encoder for ObjectType(Some([PropertyDefinition("type", Some("`EventListener`'s type."), None, None, None, PrimitiveType("string")), PropertyDefinition("useCapture", Some("`EventListener`'s useCapture."), None, None, None, PrimitiveType("boolean")), PropertyDefinition("passive", Some("`EventListener`'s passive flag."), None, None, None, PrimitiveType("boolean")), PropertyDefinition("once", Some("`EventListener`'s once flag."), None, None, None, PrimitiveType("boolean")), PropertyDefinition("scriptId", Some("Script id of the handler code."), None, None, None, RefType("Runtime.ScriptId")), PropertyDefinition("lineNumber", Some("Line number in the script (0-based)."), None, None, None, PrimitiveType("integer")), PropertyDefinition("columnNumber", Some("Column number in the script (0-based)."), None, None, None, PrimitiveType("integer")), PropertyDefinition("handler", Some("Event handler function value."), None, None, Some(True), RefType("Runtime.RemoteObject")), PropertyDefinition("originalHandler", Some("Event original handler function value."), None, None, Some(True), RefType("Runtime.RemoteObject")), PropertyDefinition("backendNodeId", Some("Node the listener is added to (if any)."), None, None, Some(True), RefType("DOM.BackendNodeId"))]))
