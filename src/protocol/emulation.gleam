//// > ⚙️  This module was generated from the Chrome DevTools Protocol version **1.3**
//// ## Emulation Domain  
////
//// This domain emulates different environments for the page.  
////
//// [📖   View this domain on the DevTools Protocol API Docs](https://chromedevtools.github.io/devtools-protocol/1-3/Emulation/)

// ---------------------------------------------------------------------------
// |  !!!!!!   This is an autogenerated file - Do not edit manually  !!!!!!  |
// | Run ` gleam run -m scripts/generate_protocol_bindings.sh` to regenerate.|  
// ---------------------------------------------------------------------------

import chrome
import protocol/dom
import protocol/page
import protocol/runtime

/// Screen orientation.
pub type ScreenOrientation {
  ScreenOrientation(type_: ScreenOrientationType, angle: Int)
}

/// This type is not part of the protocol spec, it has been generated dynamically 
/// to represent the possible values of the enum property `type` of `ScreenOrientation`
pub type ScreenOrientationType {
  ScreenOrientationTypePortraitPrimary
  ScreenOrientationTypePortraitSecondary
  ScreenOrientationTypeLandscapePrimary
  ScreenOrientationTypeLandscapeSecondary
}

@internal
pub fn encode__screen_orientation_type(value: ScreenOrientationType) {
  case value {
    ScreenOrientationTypePortraitPrimary -> "portraitPrimary"
    ScreenOrientationTypePortraitSecondary -> "portraitSecondary"
    ScreenOrientationTypeLandscapePrimary -> "landscapePrimary"
    ScreenOrientationTypeLandscapeSecondary -> "landscapeSecondary"
  }
}

@internal
pub fn decode__screen_orientation_type(value: String) {
  case value {
    "portraitPrimary" -> Ok(ScreenOrientationTypePortraitPrimary)
    "portraitSecondary" -> Ok(ScreenOrientationTypePortraitSecondary)
    "landscapePrimary" -> Ok(ScreenOrientationTypeLandscapePrimary)
    "landscapeSecondary" -> Ok(ScreenOrientationTypeLandscapeSecondary)
    _ -> Error(chrome.ProtocolError)
  }
}

pub type DisplayFeature {
  DisplayFeature(
    orientation: DisplayFeatureOrientation,
    offset: Int,
    mask_length: Int,
  )
}

/// This type is not part of the protocol spec, it has been generated dynamically 
/// to represent the possible values of the enum property `orientation` of `DisplayFeature`
pub type DisplayFeatureOrientation {
  DisplayFeatureOrientationVertical
  DisplayFeatureOrientationHorizontal
}

@internal
pub fn encode__display_feature_orientation(value: DisplayFeatureOrientation) {
  case value {
    DisplayFeatureOrientationVertical -> "vertical"
    DisplayFeatureOrientationHorizontal -> "horizontal"
  }
}

@internal
pub fn decode__display_feature_orientation(value: String) {
  case value {
    "vertical" -> Ok(DisplayFeatureOrientationVertical)
    "horizontal" -> Ok(DisplayFeatureOrientationHorizontal)
    _ -> Error(chrome.ProtocolError)
  }
}

pub type DevicePosture {
  DevicePosture(type_: DevicePostureType)
}

/// This type is not part of the protocol spec, it has been generated dynamically 
/// to represent the possible values of the enum property `type` of `DevicePosture`
pub type DevicePostureType {
  DevicePostureTypeContinuous
  DevicePostureTypeFolded
}

@internal
pub fn encode__device_posture_type(value: DevicePostureType) {
  case value {
    DevicePostureTypeContinuous -> "continuous"
    DevicePostureTypeFolded -> "folded"
  }
}

@internal
pub fn decode__device_posture_type(value: String) {
  case value {
    "continuous" -> Ok(DevicePostureTypeContinuous)
    "folded" -> Ok(DevicePostureTypeFolded)
    _ -> Error(chrome.ProtocolError)
  }
}

pub type MediaFeature {
  MediaFeature(name: String, value: String)
}
