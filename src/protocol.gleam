//// > ⚙️  This module was generated from the Chrome DevTools Protocol version **1.3**
////
//// This is the protocol definition entrypoint, which contains protocol version information.  
//// Each domain in the protocol is represented as a submodule under `/protocol`.  
////
//// For reference: [See the DevTools Protocol API Docs](https://chromedevtools.github.io/devtools-protocol/1-3/)

// ---------------------------------------------------------------------------
// |  !!!!!!   This is an autogenerated file - Do not edit manually  !!!!!!  |
// | Run ` gleam run -m scripts/generate_protocol_bindings.sh` to regenerate.|  
// ---------------------------------------------------------------------------

const version_major = "1"

const version_minor = "3"

/// Get the protocol version as a tuple of major and minor version
pub fn version() {
  #(version_major, version_minor)
}

// Shared protocol utils

/// Shared error type for calling protocol functions
pub type ProtocolError {
  ProtocolDecoderFailed
}

import gleam/io

/// Like `result.try` but returns a `ProtocolError` for any error
/// and logs a warning with the error data.
/// (Decoder errors mean the bindings are incorrect)
pub fn try_protocol_decoder(
  result: Result(a, b),
  apply fun: fn(a) -> Result(c, ProtocolError),
) -> Result(c, ProtocolError) {
  case result {
    Ok(value) -> fun(value)
    Error(data) -> {
      io.debug(#(
        "Protocol decoder failed, there must be an error in the bindings!",
        data,
      ))
      Error(ProtocolDecoderFailed)
    }
  }
}
